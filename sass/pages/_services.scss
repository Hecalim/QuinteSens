@use "../abstracts/index" as abstracts;

@mixin borderOutline($color, $color2: $color){
    border-color: $color;
    outline: solid 3px $color2;
}
@mixin nth($child: null){
    &:nth-child($child){
        grid-area: 1/1/1/1;
    }
}
.services{
    height: 800px;
    display: grid;
    grid-template-columns: repeat(2, 26%) 48%;
    grid-template-rows: repeat(2, max-content) repeat(2, 1fr);
    gap: 1.6rem;
    h3{
        grid-area: 1/1/2/4;
    }
    p{
        grid-area: 2/1/3/3;
    }
    > div{
        // width: 100%;
        min-height: 0;
        // aspect-ratio: 1/.72;
        padding-block: .8rem;
        padding-inline: 1.6rem;
        background-color: var(--brand-primary-200);
        border: solid 1px var(--brand-primary-200);
        &.active{ // JS animation
            border-color: var(--brand-secondary-300);
            outline: solid 3px var(--brand-secondary-100)
        }
        h5{
            font-weight: 650;
            font-size: inherit;
        }
        p{
            display: -webkit-box; 
            -webkit-box-orient: vertical; 
            -webkit-line-clamp: 6; 
            overflow: hidden; 
            text-align: left;
            text-overflow: ellipsis; 
        }
        &:nth-of-type(1){
            grid-area: 3/1/4/2;
        }
        &:nth-of-type(2){
            grid-area: 3/2/4/3;
        }
        &:nth-of-type(3){
            grid-area: 4/1/5/2;
        }
        &:nth-of-type(4){
            grid-area: 4/2/5/3;
        }
        &:hover{
            border-color: var(--blue-300);
            outline: solid 3px var(--blue-100);
        }
    }
    img{
        grid-area: 2/3/5/4;
        display: block;
        @include abstracts.box(100%);
        max-width: 100%;
        max-height: 100%;
        object-fit: cover;
        object-position: bottom right;
        overflow: hidden;
    }
}